/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root,int sm, vector<vector<int>>& ans, vector<int>& temp) {
        if(root == nullptr) return;

        temp.push_back(root->val);
        int sum = sm - root->val;
        if(sum == 0 && root->right == nullptr && root->left ==  nullptr){
            ans.push_back(temp);
        }

        dfs(root->left,sum,ans,temp);
        dfs(root->right,sum,ans,temp);

        temp.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum){
        vector<vector<int>> ans;
        vector<int> temp;
        dfs(root,targetSum,ans,temp);
        return ans;
    }
};
