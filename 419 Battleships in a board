class Solution {

    void dfs(vector<vector<char>>& board, int r, int c){
        int n = board.size();
        int m = board[0].size();

        if(r < 0 || c < 0 || r >= n || c >= m || board[r][c] == '.') return;
        board[r][c] = '.';

        dfs(board,r-1,c);
        dfs(board,r,c-1);
        dfs(board,r+1,c);
        dfs(board,r,c+1);
    }
public:
    int countBattleships(vector<vector<char>>& board) {
        int n = board.size();
        int m = board[0].size();
        int cnt = 0;
        if(n == 0 || m == 0) return 0;
        for(int i = 0; i < n;i++){
            for(int j = 0; j < m ; j++){
                if(board[i][j] == 'X'){
                    cnt++;
                    dfs(board,i,j);
                }
            }
        }
        return cnt;
    }
};
